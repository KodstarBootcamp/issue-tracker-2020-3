{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the API for issue tracker",
    "version" : "1.0.1",
    "title" : "Issue Tracker API",
    "contact" : {
      "email" : "kodstar.bootcamp@gmail.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://github.com/KodstarBootcamp/issue-tracker-2020-1/blob/main/LICENSE"
    }
  },
  "paths" : {
    "/issue/{issueId}" : {
      "get" : {
        "tags" : [ "Issue" ],
        "summary" : "Get issue",
        "description" : "Gets an issue by ID",
        "operationId" : "getIssueById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "issueId",
          "in" : "path",
          "description" : "ID of issue to return",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Issue"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Issue not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Issue" ],
        "summary" : "Delete issue",
        "description" : "Deletes an existing issue",
        "operationId" : "deleteIssue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "issueId",
          "in" : "path",
          "description" : "ID of issue to delete",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Issue" ],
        "summary" : "Update issue",
        "description" : "Update an existing issue",
        "operationId" : "updateIssue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "issueId",
          "in" : "path",
          "description" : "ID of issue to return",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "issue",
          "description" : "Issue object that needs to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NewIssue"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Issue"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Issue not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      }
    },
    "/issue" : {
      "post" : {
        "tags" : [ "Issue" ],
        "summary" : "Create issue",
        "operationId" : "createIssue",
        "description" : "Creates a new issue",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "issue",
          "description" : "issue to create",
          "schema" : {
            "$ref" : "#/definitions/NewIssue"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Issue"
            }
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing issue already exists"
          }
        }
      }
    },
    "/issue/all" : {
      "get" : {
        "tags" : [ "Issue" ],
        "summary" : "Get all issues",
        "description" : "Gets all existing issues",
        "operationId" : "getIssues",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Issue"
              }
            }
          }
        }
      }
    },
    "/issue/paginate/{start-end}" : {
      "get" : {
        "tags" : [ "Issue" ],
        "summary" : "Get issues with pagination",
        "description" : "Gets all existing issues with pagination",
        "operationId" : "getIssuesWithPagination",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "start-end",
          "in" : "path",
          "description" : "start default value is 0. while start 0, '-' is unnecessary",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Issue"
              }
            }
          }
        }
      }
    },
    "/label/{labelId}" : {
      "delete" : {
        "tags" : [ "Label" ],
        "summary" : "Delete Label",
        "description" : "Deletes an existing Label",
        "operationId" : "deleteLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "labelId",
          "in" : "path",
          "description" : "ID of Label to delete",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          }
        }
      }
    },
    "/label/all" : {
      "get" : {
        "tags" : [ "Label" ],
        "summary" : "Get all labels",
        "description" : "Gets all existing labels",
        "operationId" : "getAllLabels",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Label"
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "NewIssue" : {
      "type" : "object",
      "required" : [ "title" ],
      "properties" : {
        "title" : {
          "type" : "string",
          "example" : "An issue title",
          "maxLength" : 250
        },
        "description" : {
          "type" : "string",
          "example" : "A lengthy description",
          "maxLength" : 1500
        },
        "labels" : {
          "description" : "List of labels",
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "example" : [ "todo", "story" ]
        }
      }
    },
    "Issue" : {
      "allOf" : [ {
        "properties" : {
          "createDate" : {
            "type" : "string",
            "example" : "2011-10-05T14:48:00.000Z"
          },
          "updateDate" : {
            "type" : "string",
            "example" : "2011-10-05T14:48:00.000Z"
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Label"
            }
          },
          "id" : {
            "type" : "string",
            "example" : "5fe481516234264fba"
          }
        }
      }, {
        "$ref" : "#/definitions/NewIssue"
      } ]
    },
    "Label" : {
      "properties" : {
        "text" : {
          "type" : "string",
          "example" : "backend"
        },
        "color" : {
          "type" : "string",
          "example" : "#fff"
        },
        "id" : {
          "type" : "string",
          "example" : "5fe481516234264fba"
        }
      }
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "schemes" : [ "https" ],
  "basePath" : "/Kodstar/Issue_Tracker_3/1.0.1"
}